# Generated by Django 4.1.3 on 2022-11-20 20:25

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Especimen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NumeroCatalogo', models.CharField(max_length=500)),
                ('NombreDelConjuntoDatos', models.CharField(max_length=500)),
                ('ComentarioRegistroBiologico', models.CharField(max_length=500)),
                ('RegistradoPor', models.CharField(max_length=500)),
                ('NumeroIndividuo', models.IntegerField()),
                ('FechaEvento', models.DateTimeField()),
                ('Habitad', models.CharField(max_length=500)),
                ('Departamento', models.CharField(max_length=500)),
                ('Municipio', models.CharField(max_length=500)),
                ('IdentificadoPor', models.CharField(max_length=500)),
                ('FechaIdentificacion', models.DateTimeField()),
                ('IdentificacionReferencias', models.CharField(max_length=500)),
                ('ComentarioIdentificacion', models.CharField(max_length=500)),
                ('NombreCientificoComentarioRegistroBiologico', models.CharField(max_length=500)),
                ('Clase', models.CharField(max_length=500)),
                ('Orden', models.CharField(max_length=500)),
                ('Familia', models.CharField(max_length=500)),
                ('Genero', models.CharField(max_length=500)),
                ('NombreComun', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'Especimenes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idrol', models.IntegerField()),
                ('nombrerol', models.CharField(max_length=50)),
                ('estado', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre', models.CharField(max_length=60)),
                ('apellido', models.CharField(max_length=60)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
