# Generated by Django 4.1.3 on 2022-12-31 17:42

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actividades',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('NumeroCatalogo', models.CharField(max_length=50)),
                ('TareaRealizada', models.CharField(max_length=50)),
                ('Hora', models.CharField(max_length=50)),
                ('Fecha', models.CharField(max_length=50)),
                ('Descripcion', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Clase',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombreClase', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Familia',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombreFamilia', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Genero',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombreGenero', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombrerol', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TipoActividad',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombreactividad', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Orden',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombreOrden', models.CharField(max_length=50)),
                ('familia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.familia')),
            ],
        ),
        migrations.AddField(
            model_name='familia',
            name='genero',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.genero'),
        ),
        migrations.CreateModel(
            name='Ejemplar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('NumeroCatalogo', models.CharField(max_length=500)),
                ('NombreDelConjuntoDatos', models.CharField(max_length=500)),
                ('ComentarioRegistroBiologico', models.CharField(max_length=500)),
                ('RegistradoPor', models.CharField(max_length=500)),
                ('NumeroIndividuo', models.IntegerField()),
                ('FechaEvento', models.CharField(max_length=500)),
                ('Habitad', models.CharField(max_length=500)),
                ('Departamento', models.CharField(max_length=500)),
                ('Municipio', models.CharField(max_length=500)),
                ('IdentificadoPor', models.CharField(max_length=500)),
                ('FechaIdentificacion', models.CharField(max_length=500)),
                ('IdentificacionReferencias', models.CharField(max_length=500)),
                ('ComentarioIdentificacion', models.CharField(max_length=500)),
                ('NombreCientificoComentarioRegistroBiologico', models.CharField(max_length=500)),
                ('NombreComun', models.CharField(max_length=500)),
                ('ClaseE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.clase')),
            ],
        ),
        migrations.AddField(
            model_name='clase',
            name='ordern',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.orden'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=60)),
                ('nombre', models.CharField(max_length=60)),
                ('apellido', models.CharField(max_length=60)),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('password', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('rol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.rol')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
